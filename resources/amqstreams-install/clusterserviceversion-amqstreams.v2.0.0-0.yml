apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    olm.skipRange: '>=1.8.0 <2.0.0-0'
    operators.openshift.io/valid-subscription: '["Red Hat Integration", "Red Hat AMQ"]'
    certified: 'false'
    olm.targetNamespaces: amqstreams-demo
    operatorframework.io/properties: >-
      {"properties":[{"type":"olm.gvk","value":{"group":"kafka.strimzi.io","kind":"Kafka","version":"v1beta2"}},{"type":"olm.gvk","value":{"group":"kafka.strimzi.io","kind":"KafkaBridge","version":"v1beta2"}},{"type":"olm.gvk","value":{"group":"kafka.strimzi.io","kind":"KafkaConnect","version":"v1beta2"}},{"type":"olm.gvk","value":{"group":"kafka.strimzi.io","kind":"KafkaConnector","version":"v1beta2"}},{"type":"olm.gvk","value":{"group":"kafka.strimzi.io","kind":"KafkaMirrorMaker","version":"v1beta2"}},{"type":"olm.gvk","value":{"group":"kafka.strimzi.io","kind":"KafkaMirrorMaker2","version":"v1beta2"}},{"type":"olm.gvk","value":{"group":"kafka.strimzi.io","kind":"KafkaRebalance","version":"v1beta2"}},{"type":"olm.gvk","value":{"group":"kafka.strimzi.io","kind":"KafkaTopic","version":"v1alpha1"}},{"type":"olm.gvk","value":{"group":"kafka.strimzi.io","kind":"KafkaTopic","version":"v1beta1"}},{"type":"olm.gvk","value":{"group":"kafka.strimzi.io","kind":"KafkaTopic","version":"v1beta2"}},{"type":"olm.gvk","value":{"group":"kafka.strimzi.io","kind":"KafkaUser","version":"v1alpha1"}},{"type":"olm.gvk","value":{"group":"kafka.strimzi.io","kind":"KafkaUser","version":"v1beta1"}},{"type":"olm.gvk","value":{"group":"kafka.strimzi.io","kind":"KafkaUser","version":"v1beta2"}},{"type":"olm.package","value":{"packageName":"amq-streams","version":"2.0.0-0"}}]}
    alm-examples-metadata: |-
      {
        "my-cluster": {
          "description": "Example Kafka cluster with Ephemeral storage"
        },
        "my-connect-cluster": {
          "description": "Example Kafka Connect cluster"
        },
        "my-mirror-maker": {
          "description": "Example Kafka Mirror Maker 1 deployment"
        },
        "my-mm2-cluster": {
          "description": "Example Kafka Mirror Maker 2 deployment"
        },
        "my-bridge": {
          "description": "Example AMQ Streams Kafka HTTP Bridge deployment"
        },
        "my-topic": {
          "description": "Example KafkaTopic custom resource"
        },
        "my-user": {
          "description": "Example KafkaUser custom resource"
        },
        "my-source-connector": {
          "description": "Example Kafka Connect source connector"
        },
        "my-rebalance": {
          "description": "Example Cruise Control rebalance request"
        }
      }
    repository: 'https://github.com/strimzi/strimzi-kafka-operator'
    support: Red Hat
    operators.openshift.io/infrastructure-features: '["Disconnected", "Proxy"]'
    alm-examples: |-
      [
        {
          "apiVersion":"kafka.strimzi.io/v1beta2",
          "kind":"Kafka",
          "metadata":{
            "name":"my-cluster"
          },
          "spec":{
            "kafka":{
                "version":"3.0.0",
                "replicas":3,
                "listeners": [
                  {
                    "name": "plain",
                    "port": 9092,
                    "type": "internal",
                    "tls": false
                  },
                  {
                    "name": "tls",
                    "port": 9093,
                    "type": "internal",
                    "tls": true
                  }
                ],
                "config":{
                  "offsets.topic.replication.factor":3,
                  "transaction.state.log.replication.factor":3,
                  "transaction.state.log.min.isr":2,
                  "log.message.format.version":"3.0",
                  "inter.broker.protocol.version":"3.0"
                },
                "storage":{
                  "type":"ephemeral"
                }
            },
            "zookeeper":{
                "replicas":3,
                "storage":{
                  "type":"ephemeral"
                }
            },
            "entityOperator":{
                "topicOperator":{
                  },
                "userOperator":{
                  }
            }
          }
        },
        {
          "apiVersion":"kafka.strimzi.io/v1beta2",
          "kind":"KafkaConnect",
          "metadata":{
            "name":"my-connect-cluster"
          },
          "spec":{
            "version":"3.0.0",
            "replicas":1,
            "bootstrapServers":"my-cluster-kafka-bootstrap:9093",
            "tls":{
                "trustedCertificates":[
                  {
                      "secretName":"my-cluster-cluster-ca-cert",
                      "certificate":"ca.crt"
                  }
                ]
            },
            "config": {
                "group.id": "connect-cluster",
                "offset.storage.topic": "connect-cluster-offsets",
                "config.storage.topic": "connect-cluster-configs",
                "status.storage.topic": "connect-cluster-status",
                "config.storage.replication.factor": -1,
                "offset.storage.replication.factor": -1,
                "status.storage.replication.factor": -1
            }
          }
        },
        {
          "apiVersion":"kafka.strimzi.io/v1beta2",
          "kind":"KafkaMirrorMaker",
          "metadata":{
            "name":"my-mirror-maker"
          },
          "spec":{
            "version":"3.0.0",
            "replicas":1,
            "consumer":{
                "bootstrapServers":"my-source-cluster-kafka-bootstrap:9092",
                "groupId":"my-source-group-id"
            },
            "producer":{
                "bootstrapServers":"my-target-cluster-kafka-bootstrap:9092"
            },
            "include":".*"
          }
        },
        {
          "apiVersion":"kafka.strimzi.io/v1beta2",
          "kind":"KafkaBridge",
          "metadata":{
            "name":"my-bridge"
          },
          "spec":{
            "replicas":1,
            "bootstrapServers":"my-cluster-kafka-bootstrap:9092",
            "http":{
                "port":8080
            }
          }
        },
        {
          "apiVersion":"kafka.strimzi.io/v1beta2",
          "kind":"KafkaTopic",
          "metadata":{
            "name":"my-topic",
            "labels":{
                "strimzi.io/cluster":"my-cluster"
            }
          },
          "spec":{
            "partitions":10,
            "replicas":3,
            "config":{
                "retention.ms":604800000,
                "segment.bytes":1073741824
            }
          }
        },
        {
          "apiVersion":"kafka.strimzi.io/v1beta2",
          "kind":"KafkaUser",
          "metadata":{
            "name":"my-user",
            "labels":{
                "strimzi.io/cluster":"my-cluster"
            }
          },
          "spec":{
            "authentication":{
                "type":"tls"
            },
            "authorization":{
                "type":"simple",
                "acls":[
                  {
                      "resource":{
                        "type":"topic",
                        "name":"my-topic",
                        "patternType":"literal"
                      },
                      "operation":"Read",
                      "host":"*"
                  },
                  {
                      "resource":{
                        "type":"topic",
                        "name":"my-topic",
                        "patternType":"literal"
                      },
                      "operation":"Describe",
                      "host":"*"
                  },
                  {
                      "resource":{
                        "type":"group",
                        "name":"my-group",
                        "patternType":"literal"
                      },
                      "operation":"Read",
                      "host":"*"
                  },
                  {
                      "resource":{
                        "type":"topic",
                        "name":"my-topic",
                        "patternType":"literal"
                      },
                      "operation":"Write",
                      "host":"*"
                  },
                  {
                      "resource":{
                        "type":"topic",
                        "name":"my-topic",
                        "patternType":"literal"
                      },
                      "operation":"Create",
                      "host":"*"
                  },
                  {
                      "resource":{
                        "type":"topic",
                        "name":"my-topic",
                        "patternType":"literal"
                      },
                      "operation":"Describe",
                      "host":"*"
                  }
                ]
            }
          }
        },
        {
          "apiVersion": "kafka.strimzi.io/v1beta2",
          "kind": "KafkaConnector",
          "metadata": {
            "name": "my-source-connector",
            "labels": {
              "strimzi.io/cluster": "my-connect-cluster"
            }
          },
          "spec": {
            "class": "org.apache.kafka.connect.file.FileStreamSourceConnector",
            "tasksMax": 1,
            "config": {
              "file": "/opt/kafka/LICENSE",
              "topic": "my-topic"
            }
          }
        },
        {
          "apiVersion": "kafka.strimzi.io/v1beta2",
          "kind": "KafkaMirrorMaker2",
          "metadata": {
            "name": "my-mm2-cluster"
          },
          "spec": {
            "version":"3.0.0",
            "replicas": 1,
            "connectCluster": "my-cluster-target",
            "clusters": [
              {
                "alias": "my-cluster-source",
                "bootstrapServers": "my-cluster-source-kafka-bootstrap:9092"
              },
              {
                "alias": "my-cluster-target",
                "bootstrapServers": "my-cluster-target-kafka-bootstrap:9092",
                "config": {
                  "config.storage.replication.factor": -1,
                  "offset.storage.replication.factor": -1,
                  "status.storage.replication.factor": -1
                }
              }
            ],
            "mirrors": [
              {
                "sourceCluster": "my-cluster-source",
                "targetCluster": "my-cluster-target",
                "sourceConnector": {
                  "config": {
                    "replication.factor": 1,
                    "offset-syncs.topic.replication.factor": 1,
                    "sync.topic.acls.enabled": "false"
                  }
                },
                "heartbeatConnector": {
                  "config": {
                    "heartbeats.topic.replication.factor": 1
                  }
                },
                "checkpointConnector": {
                  "config": {
                    "checkpoints.topic.replication.factor": 1
                  }
                },
                "topicsPattern": ".*",
                "groupsPattern": ".*"
              }
            ]
          }
        },
        {
          "apiVersion": "kafka.strimzi.io/v1beta2",
          "kind": "KafkaRebalance",
          "metadata": {
            "name": "my-rebalance",
            "labels": {
              "strimzi.io/cluster": "my-cluster"
            }
          },
          "spec": {
            "goals": [
              "CpuCapacityGoal",
              "NetworkInboundCapacityGoal",
              "DiskCapacityGoal",
              "RackAwareGoal",
              "MinTopicLeadersPerBrokerGoal",
              "NetworkOutboundCapacityGoal",
              "ReplicaCapacityGoal"
            ]
          }
        }
      ]
    capabilities: Deep Insights
    olm.operatorNamespace: amqstreams-demo
    containerImage: >-
      registry.redhat.io/amq7/amq-streams-rhel8-operator@sha256:567bd2c0157d3f19c217375a64df091719574e8ed6ba1cfd1655c8a93e763932
    createdAt: '2021-10-15 13:13:13'
    categories: Streaming & Messaging
    description: >-
      Red Hat AMQ Streams is a massively scalable, distributed, and high
      performance data streaming platform based on Apache Kafka®.
    olm.operatorGroup: amqstreams-operator-group
  resourceVersion: '93501'
  name: amqstreams.v2.0.0-0
  uid: b42a7cea-56b7-470c-9ed9-c4d44b8aa869
  creationTimestamp: '2022-01-25T20:37:51Z'
  generation: 1
  managedFields:
    - apiVersion: operators.coreos.com/v1alpha1
      fieldsType: FieldsV1
      fieldsV1:
        'f:metadata':
          'f:annotations':
            'f:operators.openshift.io/infrastructure-features': {}
            'f:createdAt': {}
            'f:alm-examples': {}
            'f:description': {}
            'f:capabilities': {}
            'f:olm.skipRange': {}
            .: {}
            'f:operators.openshift.io/valid-subscription': {}
            'f:containerImage': {}
            'f:categories': {}
            'f:certified': {}
            'f:alm-examples-metadata': {}
            'f:operatorframework.io/properties': {}
            'f:support': {}
            'f:repository': {}
          'f:labels':
            .: {}
            'f:operatorframework.io/arch.amd64': {}
            'f:operatorframework.io/arch.ppc64le': {}
        'f:spec':
          'f:version': {}
          'f:maturity': {}
          'f:provider':
            .: {}
            'f:name': {}
          'f:links': {}
          'f:install':
            .: {}
            'f:spec':
              .: {}
              'f:clusterPermissions': {}
              'f:deployments': {}
              'f:permissions': {}
            'f:strategy': {}
          'f:maintainers': {}
          'f:description': {}
          'f:installModes': {}
          'f:minKubeVersion': {}
          'f:icon': {}
          'f:customresourcedefinitions':
            .: {}
            'f:owned': {}
          .: {}
          'f:relatedImages': {}
          'f:cleanup':
            .: {}
            'f:enabled': {}
          'f:apiservicedefinitions': {}
          'f:selector':
            .: {}
            'f:matchLabels':
              .: {}
              'f:name': {}
          'f:replaces': {}
          'f:labels':
            .: {}
            'f:name': {}
          'f:displayName': {}
          'f:keywords': {}
      manager: catalog
      operation: Update
      time: '2022-01-25T20:37:51Z'
    - apiVersion: operators.coreos.com/v1alpha1
      fieldsType: FieldsV1
      fieldsV1:
        'f:metadata':
          'f:annotations':
            'f:olm.operatorGroup': {}
            'f:olm.operatorNamespace': {}
            'f:olm.targetNamespaces': {}
          'f:labels':
            'f:olm.api.f01b87990a7cafcb': {}
            'f:olm.api.55485a8243562f77': {}
            'f:olm.api.cf92f3958f182733': {}
            'f:olm.api.e46f5f2db6650938': {}
            'f:olm.api.ef7122acb77bae9b': {}
            'f:olm.api.8223102f44696cc4': {}
            'f:olm.api.639af9e39bd31f95': {}
            'f:operators.coreos.com/amq-streams.amqstreams-demo': {}
            'f:olm.api.27140c72c390e717': {}
            'f:olm.api.8d0210e903c5ed79': {}
        'f:status':
          'f:lastUpdateTime': {}
          'f:requirementStatus': {}
          'f:phase': {}
          'f:lastTransitionTime': {}
          'f:conditions': {}
          .: {}
          'f:cleanup': {}
          'f:message': {}
          'f:reason': {}
      manager: olm
      operation: Update
      time: '2022-01-25T20:37:55Z'
  namespace: amqstreams-demo
  labels:
    olm.api.8223102f44696cc4: provided
    olm.api.639af9e39bd31f95: provided
    operators.coreos.com/amq-streams.amqstreams-demo: ''
    olm.api.27140c72c390e717: provided
    olm.api.8d0210e903c5ed79: provided
    olm.api.f01b87990a7cafcb: provided
    olm.api.55485a8243562f77: provided
    olm.api.cf92f3958f182733: provided
    operatorframework.io/arch.amd64: supported
    olm.api.e46f5f2db6650938: provided
    operatorframework.io/arch.ppc64le: supported
    olm.api.ef7122acb77bae9b: provided
spec:
  customresourcedefinitions:
    owned:
      - description: Represents a Kafka cluster
        displayName: Kafka
        kind: Kafka
        name: kafkas.kafka.strimzi.io
        resources:
          - kind: Route
            name: ''
            version: route.openshift.io/v1
          - kind: Service
            name: ''
            version: v1
          - kind: StatefulSet
            name: ''
            version: v1
          - kind: Deployment
            name: ''
            version: v1
          - kind: ReplicaSet
            name: ''
            version: v1
          - kind: Pod
            name: ''
            version: v1
          - kind: Secret
            name: ''
            version: v1
        specDescriptors:
          - description: Kafka version
            displayName: Version
            path: kafka.version
            x-descriptors:
              - 'urn:alm:descriptor:com.tectonic.ui:text'
          - description: The desired number of Kafka brokers.
            displayName: Kafka Brokers
            path: kafka.replicas
            x-descriptors:
              - 'urn:alm:descriptor:com.tectonic.ui:podCount'
          - description: The type of storage used by Kafka brokers
            displayName: Kafka storage
            path: kafka.storage.type
            x-descriptors:
              - 'urn:alm:descriptor:com.tectonic.ui:select:ephemeral'
              - 'urn:alm:descriptor:com.tectonic.ui:select:persistent-claim'
              - 'urn:alm:descriptor:com.tectonic.ui:select:jbod'
          - description: >-
              Limits describes the minimum/maximum amount of compute resources
              required/allowed
            displayName: Kafka Resource Requirements
            path: kafka.resources
            x-descriptors:
              - 'urn:alm:descriptor:com.tectonic.ui:resourceRequirements'
          - description: The desired number of Zookeeper nodes.
            displayName: Zookeeper Nodes
            path: zookeeper.replicas
            x-descriptors:
              - 'urn:alm:descriptor:com.tectonic.ui:podCount'
          - description: The type of storage used by Zookeeper nodes
            displayName: Zookeeper storage
            path: zookeeper.storage.type
            x-descriptors:
              - 'urn:alm:descriptor:com.tectonic.ui:select:ephemeral'
              - 'urn:alm:descriptor:com.tectonic.ui:select:persistent-claim'
              - 'urn:alm:descriptor:com.tectonic.ui:select:jbod'
          - description: >-
              Limits describes the minimum/maximum amount of compute resources
              required/allowed
            displayName: Zookeeper Resource Requirements
            path: zookeeper.resources
            x-descriptors:
              - 'urn:alm:descriptor:com.tectonic.ui:resourceRequirements'
        statusDescriptors:
          - description: Kafka cluster conditions
            displayName: Conditions
            path: conditions
            x-descriptors:
              - 'urn:alm:descriptor:io.kubernetes.conditions'
        version: v1beta2
      - description: Represents a Kafka Connect cluster
        displayName: Kafka Connect
        kind: KafkaConnect
        name: kafkaconnects.kafka.strimzi.io
        resources:
          - kind: Service
            name: ''
            version: v1
          - kind: Deployment
            name: ''
            version: v1
          - kind: ReplicaSet
            name: ''
            version: v1
          - kind: Pod
            name: ''
            version: v1
        specDescriptors:
          - description: The desired number of Kafka Connect nodes.
            displayName: Connect nodes
            path: replicas
            x-descriptors:
              - 'urn:alm:descriptor:com.tectonic.ui:podCount'
          - description: Kafka Connect version
            displayName: Version
            path: version
            x-descriptors:
              - 'urn:alm:descriptor:com.tectonic.ui:text'
          - description: The address of the bootstrap server
            displayName: Bootstrap server
            path: bootstrapServers
            x-descriptors:
              - 'urn:alm:descriptor:com.tectonic.ui:text'
          - description: >-
              Limits describes the minimum/maximum amount of compute resources
              required/allowed
            displayName: Resource Requirements
            path: resources
            x-descriptors:
              - 'urn:alm:descriptor:com.tectonic.ui:resourceRequirements'
        statusDescriptors:
          - description: Kafka Connect conditions
            displayName: Conditions
            path: conditions
            x-descriptors:
              - 'urn:alm:descriptor:io.kubernetes.conditions'
        version: v1beta2
      - description: Represents a Kafka MirrorMaker cluster
        displayName: Kafka Mirror Maker
        kind: KafkaMirrorMaker
        name: kafkamirrormakers.kafka.strimzi.io
        resources:
          - kind: Deployment
            name: ''
            version: v1
          - kind: ReplicaSet
            name: ''
            version: v1
          - kind: Pod
            name: ''
            version: v1
        specDescriptors:
          - description: The desired number of Kafka MirrorMaker nodes.
            displayName: MirrorMaker nodes
            path: replicas
            x-descriptors:
              - 'urn:alm:descriptor:com.tectonic.ui:podCount'
          - description: Kafka Mirror Maker version
            displayName: Version
            path: version
            x-descriptors:
              - 'urn:alm:descriptor:com.tectonic.ui:text'
          - description: The bootstrap address of the Source cluster
            displayName: Source cluster
            path: consumer.bootstrapServers
            x-descriptors:
              - 'urn:alm:descriptor:com.tectonic.ui:text'
          - description: The bootstrap address of the Target cluster
            displayName: Target cluster
            path: producer.bootstrapServers
            x-descriptors:
              - 'urn:alm:descriptor:com.tectonic.ui:text'
          - description: Expression specifying the topics which should be mirrored
            displayName: Mirrored topics
            path: include
            x-descriptors:
              - 'urn:alm:descriptor:com.tectonic.ui:text'
          - description: >-
              Limits describes the minimum/maximum amount of compute resources
              required/allowed
            displayName: Resource Requirements
            path: resources
            x-descriptors:
              - 'urn:alm:descriptor:com.tectonic.ui:resourceRequirements'
        statusDescriptors:
          - description: Kafka MirrorMaker conditions
            displayName: Conditions
            path: conditions
            x-descriptors:
              - 'urn:alm:descriptor:io.kubernetes.conditions'
        version: v1beta2
      - description: Represents a Kafka Bridge cluster
        displayName: Kafka Bridge
        kind: KafkaBridge
        name: kafkabridges.kafka.strimzi.io
        resources:
          - kind: Deployment
            name: ''
            version: v1
          - kind: ReplicaSet
            name: ''
            version: v1
          - kind: Pod
            name: ''
            version: v1
          - kind: Service
            name: ''
            version: v1
        specDescriptors:
          - description: The desired number of Kafka Bridge nodes.
            displayName: Bridge nodes
            path: replicas
            x-descriptors:
              - 'urn:alm:descriptor:com.tectonic.ui:podCount'
          - description: The bootstrap address of the Kafka cluster
            displayName: Kafka cluster
            path: bootstrapServers
            x-descriptors:
              - 'urn:alm:descriptor:com.tectonic.ui:text'
          - description: The port where the HTTP Bridge is listening
            displayName: HTTP port
            path: http.port
            x-descriptors:
              - 'urn:alm:descriptor:com.tectonic.ui:number'
          - description: >-
              Limits describes the minimum/maximum amount of compute resources
              required/allowed
            displayName: Resource Requirements
            path: resources
            x-descriptors:
              - 'urn:alm:descriptor:com.tectonic.ui:resourceRequirements'
        statusDescriptors:
          - description: Kafka Bridge conditions
            displayName: Conditions
            path: conditions
            x-descriptors:
              - 'urn:alm:descriptor:io.kubernetes.conditions'
        version: v1beta2
      - description: Represents a topic inside a Kafka cluster
        displayName: Kafka Topic
        kind: KafkaTopic
        name: kafkatopics.kafka.strimzi.io
        specDescriptors:
          - description: The number of partitions
            displayName: Partitions
            path: partitions
            x-descriptors:
              - 'urn:alm:descriptor:com.tectonic.ui:text'
          - description: The number of replicas
            displayName: Replication factor
            path: replicas
            x-descriptors:
              - 'urn:alm:descriptor:com.tectonic.ui:text'
        statusDescriptors:
          - description: Kafka topic conditions
            displayName: Conditions
            path: conditions
            x-descriptors:
              - 'urn:alm:descriptor:io.kubernetes.conditions'
        version: v1beta2
      - description: Represents a user inside a Kafka cluster
        displayName: Kafka User
        kind: KafkaUser
        name: kafkausers.kafka.strimzi.io
        resources:
          - kind: Secret
            name: ''
            version: v1
        specDescriptors:
          - description: Authentication type
            displayName: Authentication type
            path: authentication.type
            x-descriptors:
              - 'urn:alm:descriptor:com.tectonic.ui:select:tls'
              - 'urn:alm:descriptor:com.tectonic.ui:select:scram-sha-512'
          - description: Authorization type
            displayName: Authorization type
            path: authorization.type
            x-descriptors:
              - 'urn:alm:descriptor:com.tectonic.ui:select:simple'
        statusDescriptors:
          - description: Kafka user conditions
            displayName: Conditions
            path: conditions
            x-descriptors:
              - 'urn:alm:descriptor:io.kubernetes.conditions'
        version: v1beta2
      - description: Represents a Connector inside a Kafka Connect cluster
        displayName: Kafka Connector
        kind: KafkaConnector
        name: kafkaconnectors.kafka.strimzi.io
        specDescriptors:
          - description: Class of the Kafka Connect connector
            displayName: Class
            path: class
            x-descriptors:
              - 'urn:alm:descriptor:com.tectonic.ui:text'
          - description: Maximum number of tasks used by the connector
            displayName: Max number of tasks
            path: tasksMax
            x-descriptors:
              - 'urn:alm:descriptor:com.tectonic.ui:text'
        statusDescriptors:
          - description: Connector conditions
            displayName: Conditions
            path: conditions
            x-descriptors:
              - 'urn:alm:descriptor:io.kubernetes.conditions'
        version: v1beta2
      - description: Represents a Kafka MirrorMaker 2 cluster
        displayName: Kafka MirrorMaker 2
        kind: KafkaMirrorMaker2
        name: kafkamirrormaker2s.kafka.strimzi.io
        resources:
          - kind: Deployment
            name: ''
            version: v1
          - kind: ReplicaSet
            name: ''
            version: v1
          - kind: Pod
            name: ''
            version: v1
        specDescriptors:
          - description: The desired number of Kafka MirrorMaker 2 nodes.
            displayName: MirrorMaker2 nodes
            path: replicas
            x-descriptors:
              - 'urn:alm:descriptor:com.tectonic.ui:podCount'
          - description: Kafka MirrorMaker 2 version
            displayName: Version
            path: version
            x-descriptors:
              - 'urn:alm:descriptor:com.tectonic.ui:text'
          - description: The Kafka cluster where the underlying Kafka Connect connects
            displayName: Connect cluster
            path: connectCluster
            x-descriptors:
              - 'urn:alm:descriptor:com.tectonic.ui:text'
          - description: >-
              Limits describes the minimum/maximum amount of compute resources
              required/allowed
            displayName: Resource Requirements
            path: resources
            x-descriptors:
              - 'urn:alm:descriptor:com.tectonic.ui:resourceRequirements'
        statusDescriptors:
          - description: Kafka MirrorMaker conditions
            displayName: Conditions
            path: conditions
            x-descriptors:
              - 'urn:alm:descriptor:io.kubernetes.conditions'
        version: v1beta2
      - description: Triggeres rebalance of replicas in a Kafka cluster
        displayName: Kafka Rebalance
        kind: KafkaRebalance
        name: kafkarebalances.kafka.strimzi.io
        specDescriptors:
          - description: Skip hard Cruise Cotnrol goals
            displayName: Skip hard goals
            path: skipHardGoalCheck
            x-descriptors:
              - 'urn:alm:descriptor:com.tectonic.ui:booleanSwitch'
        statusDescriptors:
          - description: Kafka Rebalance conditions
            displayName: Conditions
            path: conditions
            x-descriptors:
              - 'urn:alm:descriptor:io.kubernetes.conditions'
        version: v1beta2
  relatedImages:
    - image: >-
        registry.redhat.io/amq7/amq-streams-rhel8-operator@sha256:567bd2c0157d3f19c217375a64df091719574e8ed6ba1cfd1655c8a93e763932
      name: strimzi-cluster-operator
    - image: >-
        registry.redhat.io/amq7/amq-streams-kafka-28-rhel8@sha256:8b1bfb0862b379555cab1762014891fbf741c1e284b34c94c7a3d08e2dad799e
      name: strimzi-kafka-280
    - image: >-
        registry.redhat.io/amq7/amq-streams-kafka-30-rhel8@sha256:a127eb0c0b8dd417bf113fe0bee418d4805d7a4fc8ca1fe2b997f0ad0252d8e0
      name: strimzi-kafka-300
    - image: >-
        registry.redhat.io/amq7/amq-streams-bridge-rhel8@sha256:d906213cc8331dd39c32cbb89642473bae5c9a61d3c3703f3353f8918d3a21e9
      name: strimzi-bridge
    - image: >-
        registry.access.redhat.com/ubi8/openjdk-11@sha256:f7f9aa6620e7d179fceea7de8831f799586cbd59bd5e13544bd5344d20170d79
      name: strimzi-maven-builder
  cleanup:
    enabled: false
  apiservicedefinitions: {}
  keywords:
    - kafka
    - messaging
    - kafka-connect
    - kafka-streams
    - data-streaming
    - data-streams
    - streaming
    - streams
  displayName: Red Hat Integration - AMQ Streams
  provider:
    name: Red Hat
  maturity: stable
  installModes:
    - supported: true
      type: OwnNamespace
    - supported: true
      type: SingleNamespace
    - supported: true
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
  version: 2.0.0-0
  icon:
    - base64data: >-
        
      mediatype: image/png
  minKubeVersion: 1.16.0
  links:
    - name: Product Page
      url: 'https://access.redhat.com/products/red-hat-amq'
    - name: Documentation
      url: 'https://access.redhat.com/documentation/en-us/red_hat_amq_streams'
  install:
    spec:
      clusterPermissions:
        - rules:
            - apiGroups:
                - rbac.authorization.k8s.io
              resources:
                - clusterrolebindings
              verbs:
                - get
                - list
                - watch
                - create
                - delete
                - patch
                - update
            - apiGroups:
                - storage.k8s.io
              resources:
                - storageclasses
              verbs:
                - get
            - apiGroups:
                - ''
              resources:
                - nodes
              verbs:
                - get
                - list
          serviceAccountName: strimzi-cluster-operator
      deployments:
        - name: amq-streams-cluster-operator-v2.0.0-0
          spec:
            replicas: 1
            selector:
              matchLabels:
                name: amq-streams-cluster-operator
                strimzi.io/kind: cluster-operator
            strategy:
              type: Recreate
            template:
              metadata:
                creationTimestamp: null
                labels:
                  rht.comp_ver: '2.0'
                  rht.prod_name: Red_Hat_Integration
                  rht.prod_ver: 2021.Q4
                  name: amq-streams-cluster-operator
                  com.company: Red_Hat
                  strimzi.io/kind: cluster-operator
                  rht.comp_t: infrastructure
                  rht.subcomp: cluster-operator
                  rht.comp: AMQ_Streams
              spec:
                containers:
                  - resources: {}
                    readinessProbe:
                      httpGet:
                        path: /ready
                        port: http
                      initialDelaySeconds: 10
                      periodSeconds: 30
                    name: strimzi-cluster-operator
                    livenessProbe:
                      httpGet:
                        path: /healthy
                        port: http
                      initialDelaySeconds: 10
                      periodSeconds: 30
                    env:
                      - name: STRIMZI_NAMESPACE
                        valueFrom:
                          fieldRef:
                            fieldPath: 'metadata.annotations[''olm.targetNamespaces'']'
                      - name: STRIMZI_FULL_RECONCILIATION_INTERVAL_MS
                        value: '120000'
                      - name: STRIMZI_OPERATION_TIMEOUT_MS
                        value: '300000'
                      - name: STRIMZI_DEFAULT_TLS_SIDECAR_ENTITY_OPERATOR_IMAGE
                        value: >-
                          registry.redhat.io/amq7/amq-streams-kafka-30-rhel8@sha256:a127eb0c0b8dd417bf113fe0bee418d4805d7a4fc8ca1fe2b997f0ad0252d8e0
                      - name: STRIMZI_DEFAULT_KAFKA_EXPORTER_IMAGE
                        value: >-
                          registry.redhat.io/amq7/amq-streams-kafka-30-rhel8@sha256:a127eb0c0b8dd417bf113fe0bee418d4805d7a4fc8ca1fe2b997f0ad0252d8e0
                      - name: STRIMZI_DEFAULT_CRUISE_CONTROL_IMAGE
                        value: >-
                          registry.redhat.io/amq7/amq-streams-kafka-30-rhel8@sha256:a127eb0c0b8dd417bf113fe0bee418d4805d7a4fc8ca1fe2b997f0ad0252d8e0
                      - name: STRIMZI_DEFAULT_TLS_SIDECAR_CRUISE_CONTROL_IMAGE
                        value: >-
                          registry.redhat.io/amq7/amq-streams-kafka-30-rhel8@sha256:a127eb0c0b8dd417bf113fe0bee418d4805d7a4fc8ca1fe2b997f0ad0252d8e0
                      - name: STRIMZI_KAFKA_IMAGES
                        value: >
                          2.8.0=registry.redhat.io/amq7/amq-streams-kafka-28-rhel8@sha256:8b1bfb0862b379555cab1762014891fbf741c1e284b34c94c7a3d08e2dad799e

                          3.0.0=registry.redhat.io/amq7/amq-streams-kafka-30-rhel8@sha256:a127eb0c0b8dd417bf113fe0bee418d4805d7a4fc8ca1fe2b997f0ad0252d8e0
                      - name: STRIMZI_KAFKA_CONNECT_IMAGES
                        value: >
                          2.8.0=registry.redhat.io/amq7/amq-streams-kafka-28-rhel8@sha256:8b1bfb0862b379555cab1762014891fbf741c1e284b34c94c7a3d08e2dad799e

                          3.0.0=registry.redhat.io/amq7/amq-streams-kafka-30-rhel8@sha256:a127eb0c0b8dd417bf113fe0bee418d4805d7a4fc8ca1fe2b997f0ad0252d8e0
                      - name: STRIMZI_KAFKA_MIRROR_MAKER_IMAGES
                        value: >
                          2.8.0=registry.redhat.io/amq7/amq-streams-kafka-28-rhel8@sha256:8b1bfb0862b379555cab1762014891fbf741c1e284b34c94c7a3d08e2dad799e

                          3.0.0=registry.redhat.io/amq7/amq-streams-kafka-30-rhel8@sha256:a127eb0c0b8dd417bf113fe0bee418d4805d7a4fc8ca1fe2b997f0ad0252d8e0
                      - name: STRIMZI_KAFKA_MIRROR_MAKER_2_IMAGES
                        value: >
                          2.8.0=registry.redhat.io/amq7/amq-streams-kafka-28-rhel8@sha256:8b1bfb0862b379555cab1762014891fbf741c1e284b34c94c7a3d08e2dad799e

                          3.0.0=registry.redhat.io/amq7/amq-streams-kafka-30-rhel8@sha256:a127eb0c0b8dd417bf113fe0bee418d4805d7a4fc8ca1fe2b997f0ad0252d8e0
                      - name: STRIMZI_DEFAULT_TOPIC_OPERATOR_IMAGE
                        value: >-
                          registry.redhat.io/amq7/amq-streams-rhel8-operator@sha256:567bd2c0157d3f19c217375a64df091719574e8ed6ba1cfd1655c8a93e763932
                      - name: STRIMZI_DEFAULT_USER_OPERATOR_IMAGE
                        value: >-
                          registry.redhat.io/amq7/amq-streams-rhel8-operator@sha256:567bd2c0157d3f19c217375a64df091719574e8ed6ba1cfd1655c8a93e763932
                      - name: STRIMZI_DEFAULT_KAFKA_INIT_IMAGE
                        value: >-
                          registry.redhat.io/amq7/amq-streams-rhel8-operator@sha256:567bd2c0157d3f19c217375a64df091719574e8ed6ba1cfd1655c8a93e763932
                      - name: STRIMZI_DEFAULT_KAFKA_BRIDGE_IMAGE
                        value: >-
                          registry.redhat.io/amq7/amq-streams-bridge-rhel8@sha256:d906213cc8331dd39c32cbb89642473bae5c9a61d3c3703f3353f8918d3a21e9
                      - name: STRIMZI_CUSTOM_KAFKA_BRIDGE_SERVICE_LABELS
                        value: |
                          discovery.3scale.net=true
                      - name: STRIMZI_CUSTOM_KAFKA_BRIDGE_SERVICE_ANNOTATIONS
                        value: |
                          discovery.3scale.net/scheme=http
                          discovery.3scale.net/port=8080
                          discovery.3scale.net/path=/
                          discovery.3scale.net/description-path=/openapi
                      - name: STRIMZI_DEFAULT_MAVEN_BUILDER
                        value: >-
                          registry.access.redhat.com/ubi8/openjdk-11@sha256:f7f9aa6620e7d179fceea7de8831f799586cbd59bd5e13544bd5344d20170d79
                      - name: STRIMZI_OPERATOR_NAMESPACE
                        valueFrom:
                          fieldRef:
                            fieldPath: metadata.namespace
                      - name: STRIMZI_FEATURE_GATES
                      - name: STRIMZI_CUSTOM_KAFKA_LABELS
                        value: |
                          com.company=Red_Hat
                          rht.prod_name=Red_Hat_Integration
                          rht.prod_ver=2021.Q4
                          rht.comp=AMQ_Streams
                          rht.comp_ver=2.0
                          rht.subcomp=kafka-broker
                          rht.comp_t=application
                      - name: STRIMZI_CUSTOM_KAFKA_CONNECT_LABELS
                        value: |
                          com.company=Red_Hat
                          rht.prod_name=Red_Hat_Integration
                          rht.prod_ver=2021.Q4
                          rht.comp=AMQ_Streams
                          rht.comp_ver=2.0
                          rht.subcomp=kafka-connect
                          rht.comp_t=application
                      - name: STRIMZI_CUSTOM_KAFKA_CONNECT_BUILD_LABELS
                        value: |
                          com.company=Red_Hat
                          rht.prod_name=Red_Hat_Integration
                          rht.prod_ver=2021.Q4
                          rht.comp=AMQ_Streams
                          rht.comp_ver=2.0
                          rht.subcomp=kafka-connect-build
                          rht.comp_t=application
                      - name: STRIMZI_CUSTOM_ZOOKEEPER_LABELS
                        value: |
                          com.company=Red_Hat
                          rht.prod_name=Red_Hat_Integration
                          rht.prod_ver=2021.Q4
                          rht.comp=AMQ_Streams
                          rht.comp_ver=2.0
                          rht.subcomp=zookeeper
                          rht.comp_t=infrastructure
                      - name: STRIMZI_CUSTOM_ENTITY_OPERATOR_LABELS
                        value: |
                          com.company=Red_Hat
                          rht.prod_name=Red_Hat_Integration
                          rht.prod_ver=2021.Q4
                          rht.comp=AMQ_Streams
                          rht.comp_ver=2.0
                          rht.subcomp=entity-operator
                          rht.comp_t=infrastructure
                      - name: STRIMZI_CUSTOM_KAFKA_MIRROR_MAKER2_LABELS
                        value: |
                          com.company=Red_Hat
                          rht.prod_name=Red_Hat_Integration
                          rht.prod_ver=2021.Q4
                          rht.comp=AMQ_Streams
                          rht.comp_ver=2.0
                          rht.subcomp=kafka-mirror-maker2
                          rht.comp_t=application
                      - name: STRIMZI_CUSTOM_KAFKA_MIRROR_MAKER_LABELS
                        value: |
                          com.company=Red_Hat
                          rht.prod_name=Red_Hat_Integration
                          rht.prod_ver=2021.Q4
                          rht.comp=AMQ_Streams
                          rht.comp_ver=2.0
                          rht.subcomp=kafka-mirror-maker
                          rht.comp_t=application
                      - name: STRIMZI_CUSTOM_CRUISE_CONTROL_LABELS
                        value: |
                          com.company=Red_Hat
                          rht.prod_name=Red_Hat_Integration
                          rht.prod_ver=2021.Q4
                          rht.comp=AMQ_Streams
                          rht.comp_ver=2.0 
                          rht.subcomp=cruise-control
                          rht.comp_t=application
                      - name: STRIMZI_CUSTOM_KAFKA_BRIDGE_LABELS
                        value: |
                          com.company=Red_Hat
                          rht.prod_name=Red_Hat_Integration
                          rht.prod_ver=2021.Q4
                          rht.comp=AMQ_Streams
                          rht.comp_ver=2.0
                          rht.subcomp=kafka-bridge
                          rht.comp_t=application
                      - name: STRIMZI_CUSTOM_KAFKA_EXPORTER_LABELS
                        value: |
                          com.company=Red_Hat
                          rht.prod_name=Red_Hat_Integration
                          rht.prod_ver=2021.Q4
                          rht.comp=AMQ_Streams
                          rht.comp_ver=2.0
                          rht.subcomp=kafka-exporter
                          rht.comp_t=application
                    ports:
                      - containerPort: 8080
                        name: http
                        protocol: TCP
                    volumeMounts:
                      - mountPath: /tmp
                        name: strimzi-tmp
                      - mountPath: /opt/strimzi/custom-config/
                        name: co-config-volume
                    image: >-
                      registry.redhat.io/amq7/amq-streams-rhel8-operator@sha256:567bd2c0157d3f19c217375a64df091719574e8ed6ba1cfd1655c8a93e763932
                    args:
                      - /opt/strimzi/bin/cluster_operator_run.sh
                serviceAccountName: strimzi-cluster-operator
                volumes:
                  - emptyDir:
                      medium: Memory
                    name: strimzi-tmp
                  - configMap:
                      name: amq-streams-cluster-operator
                    name: co-config-volume
      permissions:
        - rules:
            - apiGroups:
                - rbac.authorization.k8s.io
              resources:
                - rolebindings
              verbs:
                - get
                - list
                - watch
                - create
                - delete
                - patch
                - update
            - apiGroups:
                - rbac.authorization.k8s.io
              resources:
                - roles
              verbs:
                - get
                - list
                - watch
                - create
                - delete
                - patch
                - update
            - apiGroups:
                - ''
              resources:
                - pods
                - serviceaccounts
                - configmaps
                - services
                - endpoints
                - secrets
                - persistentvolumeclaims
              verbs:
                - get
                - list
                - watch
                - create
                - delete
                - patch
                - update
            - apiGroups:
                - kafka.strimzi.io
              resources:
                - kafkas
                - kafkas/status
                - kafkaconnects
                - kafkaconnects/status
                - kafkaconnectors
                - kafkaconnectors/status
                - kafkamirrormakers
                - kafkamirrormakers/status
                - kafkabridges
                - kafkabridges/status
                - kafkamirrormaker2s
                - kafkamirrormaker2s/status
                - kafkarebalances
                - kafkarebalances/status
                - kafkatopics
                - kafkatopics/status
                - kafkausers
                - kafkausers/status
              verbs:
                - get
                - list
                - watch
                - create
                - delete
                - patch
                - update
            - apiGroups:
                - extensions
              resources:
                - deployments
                - deployments/scale
                - replicasets
                - replicationcontrollers
                - networkpolicies
                - ingresses
              verbs:
                - get
                - list
                - watch
                - create
                - delete
                - patch
                - update
            - apiGroups:
                - apps
              resources:
                - deployments
                - deployments/scale
                - deployments/status
                - statefulsets
                - replicasets
              verbs:
                - get
                - list
                - watch
                - create
                - delete
                - patch
                - update
            - apiGroups:
                - ''
              resources:
                - events
              verbs:
                - create
            - apiGroups:
                - build.openshift.io
              resources:
                - buildconfigs
                - buildconfigs/instantiate
                - builds
              verbs:
                - get
                - list
                - watch
                - create
                - delete
                - patch
                - update
            - apiGroups:
                - networking.k8s.io
              resources:
                - networkpolicies
                - ingresses
              verbs:
                - get
                - list
                - watch
                - create
                - delete
                - patch
                - update
            - apiGroups:
                - route.openshift.io
              resources:
                - routes
                - routes/custom-host
              verbs:
                - get
                - list
                - watch
                - create
                - delete
                - patch
                - update
            - apiGroups:
                - policy
              resources:
                - poddisruptionbudgets
              verbs:
                - get
                - list
                - watch
                - create
                - delete
                - patch
                - update
          serviceAccountName: strimzi-cluster-operator
    strategy: deployment
  maintainers:
    - email: customerservice@redhat.com
      name: Red Hat
  description: >
    **Red Hat AMQ Streams** is a massively scalable, distributed, and high
    performance data streaming platform based on the Apache Kafka® project. AMQ
    Streams provides an event streaming backbone that allows microservices and
    other application components to exchange data with extremely high throughput
    and low latency.

    **The core capabilities include:**

    * A pub/sub messaging model, similar to a traditional enterprise messaging
    system, in which application components publish and consume events to/from
    an ordered stream

    * The long term, fault-tolerant storage of events

    * The ability for a consumer to replay streams of events

    * The ability to partition topics for horizontal scalability

    ### CRD Upgrades

    **!!! IMPORTANT !!!**  This release supports only the API version `v1beta2`
    and CRD version `apiextensions.k8s.io/v1`.  If upgrading from AMQ Streams
    1.7, migration to `v1beta2` needs to be completed for all AMQ Streams CRDs
    and CRs before the upgrade to 1.8 is done!  If upgrading from AMQ Streams
    version earlier than 1.7, you need to first install the CRDs from AMQ
    Streams 1.7 and complete the migration to `v1beta2` for all AMQ Streams CRDs
    and CRs before the upgrade to 1.8 is done!  For more details about the CRD
    upgrades, see the
    [documentation](https://access.redhat.com/documentation/en-us/red_hat_amq_streams/2.0/html/deploying_and_upgrading_amq_streams_on_openshift/assembly-upgrade-str#assembly-upgrade-resources-str).

    ### Supported Features

    * **Manages the Kafka Cluster** - Deploys and manages all of the components
    of this complex application, including dependencies like Apache ZooKeeper®
    that are traditionally hard to administer.

    * **Includes Kafka Connect** - Allows for configuration of common data
    sources and sinks to move data into and out of the Kafka cluster.

    * **Topic Management** - Creates and manages Kafka Topics within the
    cluster.

    * **User Management** - Creates and manages Kafka Users within the cluster.

    * **Connector Management** - Creates and manages Kafka Connect connectors.

    * **Includes Kafka Mirror Maker 1 and 2** - Allows for mirroring data
    between different Apache Kafka® clusters.

    * **Includes HTTP Kafka Bridge** - Allows clients to send and receive
    messages through an Apache Kafka® cluster via HTTP protocol.

    * **Cluster Rebalancing** - Uses built-in Cruise Control for redistributing
    partition replicas according to specified goals in order to achieve the best
    cluster performance.

    * **Monitoring** - Built-in support for monitoring using Prometheus and
    provided Grafana dashboards

    ### Upgrading your Clusters

    The AMQ Streams Operator understands how to run and upgrade between a set of
    Kafka versions. When specifying a new version in your config, check to make
    sure you aren't using any features that may have been removed. See [the
    upgrade
    guide](https://access.redhat.com/documentation/en-us/red_hat_amq_streams/2.0/html/deploying_and_upgrading_amq_streams_on_openshift/assembly-upgrade-str)
    for more information.

    ### Storage

    An efficient data storage infrastructure is essential to the optimal
    performance of Apache Kafka®. Apache Kafka® deployed via AMQ Streams
    requires block storage. The use of file storage (for example, NFS) is not
    recommended.

    The AMQ Streams Operator supports three types of data storage:

    * Ephemeral (Recommended for development only!)

    * Persistent

    * JBOD (Just a Bunch of Disks, suitable for Kafka only. Not supported in
    Zookeeper.)

    AMQ Streams also supports advanced operations such as adding or removing
    disks in Apache Kafka® brokers or resizing the persistent volumes (where
    supported by the infrastructure).

    ### Documentation

    Documentation for the current release can be found on the Red Hat [Customer
    Portal](https://access.redhat.com/documentation/en-us/red_hat_amq_streams).
  replaces: amqstreams.v1.8.4
  selector:
    matchLabels:
      name: amq-streams-cluster-operator
  labels:
    name: amq-streams-cluster-operator
status:
  cleanup: {}
  conditions:
    - lastTransitionTime: '2022-01-25T20:37:51Z'
      lastUpdateTime: '2022-01-25T20:37:51Z'
      message: requirements not yet checked
      phase: Pending
      reason: RequirementsUnknown
    - lastTransitionTime: '2022-01-25T20:37:51Z'
      lastUpdateTime: '2022-01-25T20:37:51Z'
      message: one or more requirements couldn't be found
      phase: Pending
      reason: RequirementsNotMet
    - lastTransitionTime: '2022-01-25T20:37:55Z'
      lastUpdateTime: '2022-01-25T20:37:55Z'
      message: 'all requirements found, attempting install'
      phase: InstallReady
      reason: AllRequirementsMet
    - lastTransitionTime: '2022-01-25T20:37:55Z'
      lastUpdateTime: '2022-01-25T20:37:55Z'
      message: waiting for install components to report healthy
      phase: Installing
      reason: InstallSucceeded
    - lastTransitionTime: '2022-01-25T20:37:55Z'
      lastUpdateTime: '2022-01-25T20:37:55Z'
      message: >-
        installing: waiting for deployment amq-streams-cluster-operator-v2.0.0-0
        to become ready: deployment "amq-streams-cluster-operator-v2.0.0-0" not
        available: Deployment does not have minimum availability.
      phase: Installing
      reason: InstallWaiting
    - lastTransitionTime: '2022-01-25T20:38:26Z'
      lastUpdateTime: '2022-01-25T20:38:26Z'
      message: install strategy completed with no errors
      phase: Succeeded
      reason: InstallSucceeded
  lastTransitionTime: '2022-01-25T20:38:26Z'
  lastUpdateTime: '2022-01-25T20:38:26Z'
  message: install strategy completed with no errors
  phase: Succeeded
  reason: InstallSucceeded
  requirementStatus:
    - group: operators.coreos.com
      kind: ClusterServiceVersion
      message: CSV minKubeVersion (1.16.0) less than server version (v1.21.6+bb8d50a)
      name: amqstreams.v2.0.0-0
      status: Present
      version: v1alpha1
    - group: apiextensions.k8s.io
      kind: CustomResourceDefinition
      message: CRD is present and Established condition is true
      name: kafkabridges.kafka.strimzi.io
      status: Present
      uuid: 497095f5-8218-400e-b3b6-2e09ea6eae1c
      version: v1
    - group: apiextensions.k8s.io
      kind: CustomResourceDefinition
      message: CRD is present and Established condition is true
      name: kafkaconnectors.kafka.strimzi.io
      status: Present
      uuid: e8bb83cc-4f52-439b-a76b-392c9ced00ea
      version: v1
    - group: apiextensions.k8s.io
      kind: CustomResourceDefinition
      message: CRD is present and Established condition is true
      name: kafkaconnects.kafka.strimzi.io
      status: Present
      uuid: f285214a-b532-4d61-b2b5-57d2ae9482fd
      version: v1
    - group: apiextensions.k8s.io
      kind: CustomResourceDefinition
      message: CRD is present and Established condition is true
      name: kafkamirrormaker2s.kafka.strimzi.io
      status: Present
      uuid: 97bcf902-059b-4f47-ae45-caf0c42511d2
      version: v1
    - group: apiextensions.k8s.io
      kind: CustomResourceDefinition
      message: CRD is present and Established condition is true
      name: kafkamirrormakers.kafka.strimzi.io
      status: Present
      uuid: d3b730fe-5a38-492d-80fc-1620ce59df66
      version: v1
    - group: apiextensions.k8s.io
      kind: CustomResourceDefinition
      message: CRD is present and Established condition is true
      name: kafkarebalances.kafka.strimzi.io
      status: Present
      uuid: be3a9e72-49ea-4868-980b-e74409bdf045
      version: v1
    - group: apiextensions.k8s.io
      kind: CustomResourceDefinition
      message: CRD is present and Established condition is true
      name: kafkas.kafka.strimzi.io
      status: Present
      uuid: 07d705b8-e557-451a-8f63-e066da377f9e
      version: v1
    - group: apiextensions.k8s.io
      kind: CustomResourceDefinition
      message: CRD is present and Established condition is true
      name: kafkatopics.kafka.strimzi.io
      status: Present
      uuid: 2ba57066-20dd-4e3d-a769-9565b9064cd2
      version: v1
    - group: apiextensions.k8s.io
      kind: CustomResourceDefinition
      message: CRD is present and Established condition is true
      name: kafkausers.kafka.strimzi.io
      status: Present
      uuid: 28d39bb3-8625-4133-b26b-aa08ddae88f7
      version: v1
    - dependents:
        - group: rbac.authorization.k8s.io
          kind: PolicyRule
          message: >-
            namespaced
            rule:{"verbs":["get","list","watch","create","delete","patch","update"],"apiGroups":["rbac.authorization.k8s.io"],"resources":["rolebindings"]}
          status: Satisfied
          version: v1
        - group: rbac.authorization.k8s.io
          kind: PolicyRule
          message: >-
            namespaced
            rule:{"verbs":["get","list","watch","create","delete","patch","update"],"apiGroups":["rbac.authorization.k8s.io"],"resources":["roles"]}
          status: Satisfied
          version: v1
        - group: rbac.authorization.k8s.io
          kind: PolicyRule
          message: >-
            namespaced
            rule:{"verbs":["get","list","watch","create","delete","patch","update"],"apiGroups":[""],"resources":["pods","serviceaccounts","configmaps","services","endpoints","secrets","persistentvolumeclaims"]}
          status: Satisfied
          version: v1
        - group: rbac.authorization.k8s.io
          kind: PolicyRule
          message: >-
            namespaced
            rule:{"verbs":["get","list","watch","create","delete","patch","update"],"apiGroups":["kafka.strimzi.io"],"resources":["kafkas","kafkas/status","kafkaconnects","kafkaconnects/status","kafkaconnectors","kafkaconnectors/status","kafkamirrormakers","kafkamirrormakers/status","kafkabridges","kafkabridges/status","kafkamirrormaker2s","kafkamirrormaker2s/status","kafkarebalances","kafkarebalances/status","kafkatopics","kafkatopics/status","kafkausers","kafkausers/status"]}
          status: Satisfied
          version: v1
        - group: rbac.authorization.k8s.io
          kind: PolicyRule
          message: >-
            namespaced
            rule:{"verbs":["get","list","watch","create","delete","patch","update"],"apiGroups":["extensions"],"resources":["deployments","deployments/scale","replicasets","replicationcontrollers","networkpolicies","ingresses"]}
          status: Satisfied
          version: v1
        - group: rbac.authorization.k8s.io
          kind: PolicyRule
          message: >-
            namespaced
            rule:{"verbs":["get","list","watch","create","delete","patch","update"],"apiGroups":["apps"],"resources":["deployments","deployments/scale","deployments/status","statefulsets","replicasets"]}
          status: Satisfied
          version: v1
        - group: rbac.authorization.k8s.io
          kind: PolicyRule
          message: >-
            namespaced
            rule:{"verbs":["create"],"apiGroups":[""],"resources":["events"]}
          status: Satisfied
          version: v1
        - group: rbac.authorization.k8s.io
          kind: PolicyRule
          message: >-
            namespaced
            rule:{"verbs":["get","list","watch","create","delete","patch","update"],"apiGroups":["build.openshift.io"],"resources":["buildconfigs","buildconfigs/instantiate","builds"]}
          status: Satisfied
          version: v1
        - group: rbac.authorization.k8s.io
          kind: PolicyRule
          message: >-
            namespaced
            rule:{"verbs":["get","list","watch","create","delete","patch","update"],"apiGroups":["networking.k8s.io"],"resources":["networkpolicies","ingresses"]}
          status: Satisfied
          version: v1
        - group: rbac.authorization.k8s.io
          kind: PolicyRule
          message: >-
            namespaced
            rule:{"verbs":["get","list","watch","create","delete","patch","update"],"apiGroups":["route.openshift.io"],"resources":["routes","routes/custom-host"]}
          status: Satisfied
          version: v1
        - group: rbac.authorization.k8s.io
          kind: PolicyRule
          message: >-
            namespaced
            rule:{"verbs":["get","list","watch","create","delete","patch","update"],"apiGroups":["policy"],"resources":["poddisruptionbudgets"]}
          status: Satisfied
          version: v1
        - group: rbac.authorization.k8s.io
          kind: PolicyRule
          message: >-
            cluster
            rule:{"verbs":["get","list","watch","create","delete","patch","update"],"apiGroups":["rbac.authorization.k8s.io"],"resources":["clusterrolebindings"]}
          status: Satisfied
          version: v1
        - group: rbac.authorization.k8s.io
          kind: PolicyRule
          message: >-
            cluster
            rule:{"verbs":["get"],"apiGroups":["storage.k8s.io"],"resources":["storageclasses"]}
          status: Satisfied
          version: v1
        - group: rbac.authorization.k8s.io
          kind: PolicyRule
          message: >-
            cluster
            rule:{"verbs":["get","list"],"apiGroups":[""],"resources":["nodes"]}
          status: Satisfied
          version: v1
      group: ''
      kind: ServiceAccount
      message: ''
      name: strimzi-cluster-operator
      status: Present
      version: v1
